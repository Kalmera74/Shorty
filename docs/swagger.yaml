basePath: /
definitions:
  analytics.Analysis:
    properties:
      originalUrl:
        type: string
      shortUrl:
        type: string
      usageDetails:
        items:
          $ref: '#/definitions/analytics.Usage'
        type: array
    type: object
  analytics.ClickEvent:
    properties:
      ip:
        type: string
      short_id:
        type: integer
      time_stamp:
        type: string
      user_agent:
        type: string
    type: object
  analytics.ClickModel:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      ip_address:
        type: string
      short:
        $ref: '#/definitions/shortener.ShortModel'
      short_id:
        type: integer
      updated_at:
        type: string
      user_agent:
        type: string
    required:
    - ip_address
    - short_id
    - user_agent
    type: object
  analytics.Usage:
    properties:
      clickTimes:
        type: string
      ipAddress:
        type: string
      userAgents:
        type: string
    type: object
  shortener.SearchRequest:
    properties:
      original_url:
        type: string
      short_url:
        type: string
      user_id:
        type: integer
    type: object
  shortener.ShortModel:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      originalUrl:
        type: string
      shortUrl:
        type: string
      updated_at:
        type: string
      userID:
        minimum: 1
        type: integer
    required:
    - originalUrl
    - shortUrl
    - userID
    type: object
  shortener.ShortenRequest:
    properties:
      custom_short_url:
        type: string
      original_url:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - original_url
    - user_id
    type: object
  shortener.ShortenResponse:
    properties:
      id:
        type: integer
      original_url:
        type: string
      short_url:
        type: string
    type: object
  user.UserCreateRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
      user_name:
        maxLength: 10
        minLength: 3
        type: string
    required:
    - email
    - password
    - user_name
    type: object
  user.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  user.UserLoginResponse:
    properties:
      token:
        type: string
    type: object
  user.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      user_name:
        type: string
    type: object
  user.UserUpdateRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
      user_name:
        maxLength: 30
        minLength: 3
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for Shorty URL shortener
  license:
    name: MIT
  title: Shorty API
  version: "1.0"
paths:
  /{url}:
    get:
      parameters:
      - description: Short URL
        in: path
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "301":
          description: Redirects to the original URL
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to the original URL
      tags:
      - shorts
  /api/analytics:
    get:
      description: Returns all click analytics grouped by short URLs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/analytics.Analysis'
            type: array
        "404":
          description: No clicks found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch analytics
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all click analytics
      tags:
      - analytics
    post:
      consumes:
      - application/json
      description: Records a click for a short URL
      parameters:
      - description: Click information
        in: body
        name: click
        required: true
        schema:
          $ref: '#/definitions/analytics.ClickEvent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/analytics.ClickModel'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create click
          schema:
            additionalProperties:
              type: string
            type: object
      summary: CreateClick a new click record
      tags:
      - analytics
  /api/analytics/{shortUrl}:
    get:
      description: Returns click analytics for the given short URL
      parameters:
      - description: Short URL identifier
        in: path
        name: shortUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analytics.Analysis'
        "400":
          description: Missing shortUrl parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No clicks found for this short URL
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch clicks
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get analytics for a specific short URL
      tags:
      - analytics
  /api/analytics/clicks:
    get:
      description: Returns all individual click records (not grouped)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/analytics.ClickModel'
            type: array
        "404":
          description: No clicks found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch clicks
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all click records
      tags:
      - analytics
  /api/analytics/clicks/{id}:
    get:
      description: Returns a single click record based on its ID
      parameters:
      - description: Click ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/analytics.ClickModel'
        "400":
          description: Invalid ID parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Click not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch click
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a click record by ID
      tags:
      - analytics
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password, returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token successfully generated
          schema:
            $ref: '#/definitions/user.UserLoginResponse'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not create token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/register:
    get:
      description: Fetch a user given their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
  /api/v1/shorts:
    get:
      description: Retrieve all shortened URLs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/shortener.ShortenResponse'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shortened URLs
      tags:
      - shorts
    post:
      consumes:
      - application/json
      description: Shorten a given URL
      parameters:
      - description: Shorten Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shortener.ShortenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shortener.ShortenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new shortened URL
      tags:
      - shorts
  /api/v1/shorts/{id}:
    delete:
      parameters:
      - description: Short ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a shortened URL
      tags:
      - shorts
    get:
      parameters:
      - description: Short ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shortener.ShortenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a shortened URL by ID
      tags:
      - shorts
  /api/v1/shorts/search:
    post:
      consumes:
      - application/json
      description: Search using filters (URL, user ID, etc.)
      parameters:
      - description: Search criteria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shortener.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/shortener.ShortenResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search for shortened URLs
      tags:
      - shorts
  /api/v1/shorts/short/{url}:
    get:
      parameters:
      - description: Short URL
        in: path
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shortener.ShortenResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a shortened URL by short code
      tags:
      - shorts
  /api/v1/users:
    get:
      description: Get all registered users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user with username and email
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      description: Remove a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update username or email of a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - users
  /api/v1/users/{id}/shorts:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/shortener.ShortenResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shorts for a specific user
      tags:
      - users
swagger: "2.0"
